{
  "integration_opportunities": {
    "Where does the system generate text output for users?": {
      "purpose": "Find user-facing text generation points",
      "results": [
        {
          "entity": "generate_response",
          "file": "rag_pipeline.py",
          "integration_score": 5.5,
          "relevance": 0,
          "suggestions": [
            "Consider adding tts_enabled parameter to generate_response"
          ],
          "metadata": {
            "entity": "generate_response",
            "file": "rag_pipeline.py",
            "output_type": "text",
            "returns": "response_text",
            "type": "function"
          }
        },
        {
          "entity": "answer_question",
          "file": "rag_pipeline.py",
          "integration_score": 4.0,
          "relevance": 0,
          "suggestions": [
            "Replace or supplement print() with TTS in answer_question"
          ],
          "metadata": {
            "entity": "answer_question",
            "file": "rag_pipeline.py",
            "has_print": true,
            "output_type": "text",
            "returns": "answer",
            "type": "function"
          }
        },
        {
          "entity": "CodeAnalysisUI",
          "file": "ui_components.py",
          "integration_score": 6.5,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to CodeAnalysisUI for accessibility",
            "Replace or supplement print() with TTS in CodeAnalysisUI",
            "Consider adding tts_enabled parameter to CodeAnalysisUI"
          ],
          "metadata": {
            "entity": "CodeAnalysisUI",
            "file": "ui_components.py",
            "has_print": true,
            "output_type": "text",
            "type": "class",
            "user_facing": true
          }
        },
        {
          "entity": "generate_pipeline_summary",
          "file": "pipeline_summary.py",
          "integration_score": 4.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to generate_pipeline_summary for accessibility",
            "Add TTS readout option for generate_pipeline_summary output"
          ],
          "metadata": {
            "entity": "generate_pipeline_summary",
            "file": "pipeline_summary.py",
            "output_type": "text",
            "returns": "summary",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "handle_error",
          "file": "error_handler.py",
          "integration_score": 7.5,
          "relevance": 0,
          "suggestions": [
            "HIGH PRIORITY: Add TTS call after return statement in handle_error",
            "Wrap return value with tts_output() function",
            "Add TTS option to handle_error for accessibility",
            "Replace or supplement print() with TTS in handle_error",
            "Add TTS for error notifications in handle_error",
            "Add TTS readout option for handle_error output",
            "Consider adding tts_enabled parameter to handle_error"
          ],
          "metadata": {
            "entity": "handle_error",
            "file": "error_handler.py",
            "has_print": true,
            "output_type": "text",
            "type": "function",
            "user_facing": true
          }
        }
      ],
      "top_score": 7.5
    },
    "What functions return text messages or responses?": {
      "purpose": "Find functions that return text suitable for TTS",
      "results": [
        {
          "entity": "generate_response",
          "file": "rag_pipeline.py",
          "integration_score": 6.5,
          "relevance": 0,
          "suggestions": [
            "Consider adding tts_enabled parameter to generate_response"
          ],
          "metadata": {
            "entity": "generate_response",
            "file": "rag_pipeline.py",
            "output_type": "text",
            "returns": "response_text",
            "type": "function"
          }
        },
        {
          "entity": "ResponseFormatter",
          "file": "response_formatter.py",
          "integration_score": 3.0,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "ResponseFormatter",
            "file": "response_formatter.py",
            "output_type": "text",
            "returns": "explanation",
            "type": "class"
          }
        },
        {
          "entity": "log_operation_end",
          "file": "logger.py",
          "integration_score": 2.0,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "log_operation_end",
            "file": "logger.py",
            "output_type": "text",
            "returns": "message",
            "type": "function"
          }
        },
        {
          "entity": "handle_error",
          "file": "error_handler.py",
          "integration_score": 7.5,
          "relevance": 0,
          "suggestions": [
            "HIGH PRIORITY: Add TTS call after return statement in handle_error",
            "Wrap return value with tts_output() function",
            "Add TTS option to handle_error for accessibility",
            "Replace or supplement print() with TTS in handle_error",
            "Add TTS for error notifications in handle_error",
            "Add TTS readout option for handle_error output",
            "Consider adding tts_enabled parameter to handle_error"
          ],
          "metadata": {
            "entity": "handle_error",
            "file": "error_handler.py",
            "has_print": true,
            "output_type": "text",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "answer_question",
          "file": "rag_pipeline.py",
          "integration_score": 3.5,
          "relevance": 0,
          "suggestions": [
            "Replace or supplement print() with TTS in answer_question"
          ],
          "metadata": {
            "entity": "answer_question",
            "file": "rag_pipeline.py",
            "has_print": true,
            "output_type": "text",
            "returns": "answer",
            "type": "function"
          }
        }
      ],
      "top_score": 7.5
    },
    "Where are answers and results presented to users?": {
      "purpose": "Find presentation layer for TTS integration",
      "results": [
        {
          "entity": "answer_question",
          "file": "rag_pipeline.py",
          "integration_score": 3.5,
          "relevance": 0,
          "suggestions": [
            "Replace or supplement print() with TTS in answer_question"
          ],
          "metadata": {
            "entity": "answer_question",
            "file": "rag_pipeline.py",
            "has_print": true,
            "output_type": "text",
            "returns": "answer",
            "type": "function"
          }
        },
        {
          "entity": "generate_response",
          "file": "rag_pipeline.py",
          "integration_score": 6.0,
          "relevance": 0,
          "suggestions": [
            "Consider adding tts_enabled parameter to generate_response"
          ],
          "metadata": {
            "entity": "generate_response",
            "file": "rag_pipeline.py",
            "output_type": "text",
            "returns": "response_text",
            "type": "function"
          }
        },
        {
          "entity": "CodeAnalysisUI",
          "file": "ui_components.py",
          "integration_score": 6.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to CodeAnalysisUI for accessibility",
            "Replace or supplement print() with TTS in CodeAnalysisUI",
            "Consider adding tts_enabled parameter to CodeAnalysisUI"
          ],
          "metadata": {
            "entity": "CodeAnalysisUI",
            "file": "ui_components.py",
            "has_print": true,
            "output_type": "text",
            "type": "class",
            "user_facing": true
          }
        },
        {
          "entity": "ResponseFormatter",
          "file": "response_formatter.py",
          "integration_score": 2.0,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "ResponseFormatter",
            "file": "response_formatter.py",
            "output_type": "text",
            "returns": "explanation",
            "type": "class"
          }
        },
        {
          "entity": "create_analysis_report",
          "file": "report_generator.py",
          "integration_score": 3.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to create_analysis_report for accessibility",
            "Add TTS readout option for create_analysis_report output"
          ],
          "metadata": {
            "entity": "create_analysis_report",
            "file": "report_generator.py",
            "output_type": "text",
            "returns": "report",
            "type": "function",
            "user_facing": true
          }
        }
      ],
      "top_score": 6.0
    },
    "What error messages and notifications are shown?": {
      "purpose": "Find error handling for TTS alerts",
      "results": [
        {
          "entity": "handle_error",
          "file": "error_handler.py",
          "integration_score": 7.0,
          "relevance": 0,
          "suggestions": [
            "HIGH PRIORITY: Add TTS call after return statement in handle_error",
            "Wrap return value with tts_output() function",
            "Add TTS option to handle_error for accessibility",
            "Replace or supplement print() with TTS in handle_error",
            "Add TTS for error notifications in handle_error",
            "Add TTS readout option for handle_error output",
            "Consider adding tts_enabled parameter to handle_error"
          ],
          "metadata": {
            "entity": "handle_error",
            "file": "error_handler.py",
            "has_print": true,
            "output_type": "text",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "notify_completion",
          "file": "notification_system.py",
          "integration_score": 5.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to notify_completion for accessibility",
            "Consider adding tts_enabled parameter to notify_completion"
          ],
          "metadata": {
            "entity": "notify_completion",
            "file": "notification_system.py",
            "output_type": "text",
            "returns": "message",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "log_operation_end",
          "file": "logger.py",
          "integration_score": 1.5,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "log_operation_end",
            "file": "logger.py",
            "output_type": "text",
            "returns": "message",
            "type": "function"
          }
        },
        {
          "entity": "validate_configuration",
          "file": "config_validator.py",
          "integration_score": 0.0,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "validate_configuration",
            "file": "config_validator.py",
            "output_type": "text",
            "returns": "validation_result",
            "type": "function"
          }
        },
        {
          "entity": "create_analysis_report",
          "file": "report_generator.py",
          "integration_score": 3.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to create_analysis_report for accessibility",
            "Add TTS readout option for create_analysis_report output"
          ],
          "metadata": {
            "entity": "create_analysis_report",
            "file": "report_generator.py",
            "output_type": "text",
            "returns": "report",
            "type": "function",
            "user_facing": true
          }
        }
      ],
      "top_score": 7.0
    },
    "Where does logging output important information?": {
      "purpose": "Find logging points that could be spoken",
      "results": [
        {
          "entity": "log_operation_end",
          "file": "logger.py",
          "integration_score": 2.5,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "log_operation_end",
            "file": "logger.py",
            "output_type": "text",
            "returns": "message",
            "type": "function"
          }
        },
        {
          "entity": "generate_response",
          "file": "rag_pipeline.py",
          "integration_score": 6.0,
          "relevance": 0,
          "suggestions": [
            "Consider adding tts_enabled parameter to generate_response"
          ],
          "metadata": {
            "entity": "generate_response",
            "file": "rag_pipeline.py",
            "output_type": "text",
            "returns": "response_text",
            "type": "function"
          }
        },
        {
          "entity": "CodeAnalysisUI",
          "file": "ui_components.py",
          "integration_score": 5.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to CodeAnalysisUI for accessibility",
            "Replace or supplement print() with TTS in CodeAnalysisUI",
            "Consider adding tts_enabled parameter to CodeAnalysisUI"
          ],
          "metadata": {
            "entity": "CodeAnalysisUI",
            "file": "ui_components.py",
            "has_print": true,
            "output_type": "text",
            "type": "class",
            "user_facing": true
          }
        },
        {
          "entity": "create_analysis_report",
          "file": "report_generator.py",
          "integration_score": 3.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to create_analysis_report for accessibility",
            "Add TTS readout option for create_analysis_report output"
          ],
          "metadata": {
            "entity": "create_analysis_report",
            "file": "report_generator.py",
            "output_type": "text",
            "returns": "report",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "generate_pipeline_summary",
          "file": "pipeline_summary.py",
          "integration_score": 4.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to generate_pipeline_summary for accessibility",
            "Add TTS readout option for generate_pipeline_summary output"
          ],
          "metadata": {
            "entity": "generate_pipeline_summary",
            "file": "pipeline_summary.py",
            "output_type": "text",
            "returns": "summary",
            "type": "function",
            "user_facing": true
          }
        }
      ],
      "top_score": 6.0
    },
    "What functions generate summaries or reports?": {
      "purpose": "Find summary generation for TTS readouts",
      "results": [
        {
          "entity": "create_analysis_report",
          "file": "report_generator.py",
          "integration_score": 4.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to create_analysis_report for accessibility",
            "Add TTS readout option for create_analysis_report output"
          ],
          "metadata": {
            "entity": "create_analysis_report",
            "file": "report_generator.py",
            "output_type": "text",
            "returns": "report",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "generate_pipeline_summary",
          "file": "pipeline_summary.py",
          "integration_score": 5.0,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to generate_pipeline_summary for accessibility",
            "Add TTS readout option for generate_pipeline_summary output",
            "Consider adding tts_enabled parameter to generate_pipeline_summary"
          ],
          "metadata": {
            "entity": "generate_pipeline_summary",
            "file": "pipeline_summary.py",
            "output_type": "text",
            "returns": "summary",
            "type": "function",
            "user_facing": true
          }
        },
        {
          "entity": "ResponseFormatter",
          "file": "response_formatter.py",
          "integration_score": 2.5,
          "relevance": 0,
          "suggestions": [],
          "metadata": {
            "entity": "ResponseFormatter",
            "file": "response_formatter.py",
            "output_type": "text",
            "returns": "explanation",
            "type": "class"
          }
        },
        {
          "entity": "generate_response",
          "file": "rag_pipeline.py",
          "integration_score": 5.5,
          "relevance": 0,
          "suggestions": [
            "Consider adding tts_enabled parameter to generate_response"
          ],
          "metadata": {
            "entity": "generate_response",
            "file": "rag_pipeline.py",
            "output_type": "text",
            "returns": "response_text",
            "type": "function"
          }
        },
        {
          "entity": "CodeAnalysisUI",
          "file": "ui_components.py",
          "integration_score": 5.5,
          "relevance": 0,
          "suggestions": [
            "Add TTS option to CodeAnalysisUI for accessibility",
            "Replace or supplement print() with TTS in CodeAnalysisUI",
            "Consider adding tts_enabled parameter to CodeAnalysisUI"
          ],
          "metadata": {
            "entity": "CodeAnalysisUI",
            "file": "ui_components.py",
            "has_print": true,
            "output_type": "text",
            "type": "class",
            "user_facing": true
          }
        }
      ],
      "top_score": 5.5
    }
  },
  "implementation_plan": [
    {
      "entity": "handle_error",
      "file": "error_handler.py",
      "score": 7.5,
      "type": "function",
      "user_facing": true
    },
    {
      "entity": "generate_response",
      "file": "rag_pipeline.py",
      "score": 6.0,
      "type": "function",
      "user_facing": false
    },
    {
      "entity": "notify_completion",
      "file": "notification_system.py",
      "score": 5.0,
      "type": "function",
      "user_facing": true
    },
    {
      "entity": "CodeAnalysisUI",
      "file": "ui_components.py",
      "score": 5.0,
      "type": "class",
      "user_facing": true
    }
  ],
  "summary": {
    "total_opportunities": 30,
    "high_priority": 3,
    "ready_for_implementation": 4
  }
}